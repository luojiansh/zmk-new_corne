#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        cap_dance: cap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "CAP_DANCE";
            #binding-cells = <0>;
            bindings = <&none>, <&kp CAPSLOCK>;
        };

        shift_enter: shift_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&sk>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none        &kp Q  &kp W  &kp F          &kp P         &kp G                              &kp UP               &kp J             &kp L                     &kp U       &kp Y    &kp SQT   &none
&key_repeat  &kp A  &kp R  &kp S          &kp T         &kp D                    &kp LEFT  &kp RET   &kp RIGHT  &kp H             &kp N                     &kp E       &kp I    &kp O     &none
&none        &kp Z  &kp X  &kp C          &kp V         &kp B       &kp SPACE              &kp DOWN             &kp K             &kp M                     &kp COMMA   &kp DOT  &kp FSLH  &none
                           &ltq 3 ESCAPE  &ltq 1 SPACE  &ltq 2 TAB                                              &ltq 4 BACKSPACE  &shift_enter RSHFT ENTER  &ltq 5 DEL
            >;
        };

        Symbols {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN       &kp HASH       &kp DOLLAR  &kp PERCENT                           &kp UP               &kp TILDE     &kp GRAVE              &kp COLON        &kp SEMICOLON      &kp PLUS        &trans
&trans  &sk LCMD         &sk LEFT_ALT      &sk LCTRL      &sk LSHFT   &kp CARET                   &kp LEFT  &kp RET   &kp RIGHT  &kp EQUAL     &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp MINUS       &trans
&trans  &kp LESS_THAN    &kp GREATER_THAN  &kp BACKSLASH  &kp PIPE    &kp AMPERSAND  &kp SPACE              &kp DOWN             &kp ASTERISK  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp UNDERSCORE  &trans
                                           &trans         &trans      &trans                                                     &kp LC(BSPC)  &kp SPACE              &kp ESCAPE
            >;
        };

        Numbers {
            bindings = <
&trans  &kp LEFT       &kp DOWN          &kp UP     &kp RIGHT  &kp PERCENT                           &kp UP               &kp FSLH      &kp N7     &kp N8   &kp N9  &kp PLUS        &trans
&trans  &sk LCMD       &sk LEFT_ALT      &sk LCTRL  &sk LSHFT  &sk RIGHT_ALT               &kp LEFT  &kp RET   &kp RIGHT  &kp EQUAL     &kp N4     &kp N5   &kp N6  &kp MINUS       &trans
&trans  &kp LESS_THAN  &kp GREATER_THAN  &kp TAB    &kp BSPC   &kp RET        &kp SPACE              &kp DOWN             &kp ASTERISK  &kp N1     &kp N2   &kp N3  &kp UNDERSCORE  &trans
                                         &trans     &trans     &trans                                                     &kp N0        &kp SPACE  &kp DOT
            >;
        };

        Function {
            bindings = <
&trans  &kp C_STOP  &kp C_PREV    &kp C_PLAY_PAUSE       &kp C_NEXT     &kp C_BRI_UP                         &kp UP               &kp F12        &kp F7     &kp F8     &kp F9  &cap_dance  &trans
&trans  &sk LCMD    &sk LEFT_ALT  &sk LCTRL              &sk LSHFT      &kp C_BRI_DN               &kp LEFT  &kp RET   &kp RIGHT  &kp F11        &kp F4     &kp F5     &kp F6  &none       &trans
&trans  &kp C_MUTE  &kp C_VOL_DN  &kp LS(LC(BACKSLASH))  &kp LC(LS(V))  &kp C_VOL_UP  &kp SPACE              &kp DOWN             &kp F10        &kp F1     &kp F2     &kp F3  &none       &trans
                                  &trans                 &trans         &trans                                                    &kp RIGHT_ALT  &kp RSHFT  &kp RCTRL
            >;
        };

        Navigation {
            bindings = <
&trans  &kp ESC    &kp C_AC_BACK  &kp C_AC_SEARCH  &kp C_AC_FORWARD  &kp INS                               &kp UP               &kp PG_UP  &kp HOME  &kp UP    &kp END     &cap_dance       &trans
&trans  &sk LCMD   &sk LEFT_ALT   &sk LCTRL        &sk LSHFT         &sk RIGHT_ALT               &kp LEFT  &kp RET   &kp RIGHT  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL          &trans
&trans  &kp LC(Z)  &kp LC(X)      &kp LC(C)        &kp LC(V)         &kp LEFT_GUI   &kp SPACE              &kp DOWN             &kp RET    &kp BSPC  &kp TAB   &kp C_MENU  &kp PRINTSCREEN  &trans
                                  &kp LCTRL        &kp LSHFT         &kp LEFT_ALT                                               &trans     &trans    &trans
            >;
        };

        Control {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &trans          &none   &none           &none   &none  &none  &trans
&trans  &none         &none         &none         &bt BT_CLR    &out OUT_TOG           &trans  &trans  &trans  &none   &bt BT_CLR_ALL  &none   &none  &none  &trans
&trans  &none         &none         &none         &out OUT_USB  &out OUT_BLE  &none            &trans          &none   &none           &none   &none  &none  &trans
                                    &trans        &trans        &trans                                         &trans  &trans          &trans
            >;
        };
    };
};
